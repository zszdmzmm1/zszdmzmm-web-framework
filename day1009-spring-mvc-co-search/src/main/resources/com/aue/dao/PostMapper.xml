<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aue.dao.PostMapper">
    <resultMap id="post" type="Post" autoMapping="true">
        <association property="user" javaType="User" autoMapping="true">
            <result column="user_id" property="id"/>
        </association>
    </resultMap>

    <select id="selectPostsByPage" resultMap="post">
        select *
        from blog_list
        limit #{rowCount} offset #{offset}
    </select>

    <select id="selectById" resultMap="post">
        select * from blog_list where id = #{id};
    </select>

    <select id="selectByCondition" resultMap="post">
        select * from blog_list
        where title like '%${title}%'
          and content like '%${content}%'
          and status = #{status};
    </select>

    <select id="selectByConditionWithDynamicSql" resultMap="post">
        select * from blog_list
        <where>
            <if test="status != 0">
                and status = #{status}
            </if>
            <if test="title != null and title != ''">
                and title like '%${title}%'
            </if>
            <if test="content != null and content != ''">
                and content like '%${content}%'
            </if>
        </where>
    </select>

    <select id="selectByConditionWithOneCondition" resultMap="post">
        select * from blog_list
        <choose>
            <when test="status != 0">
                where status = #{status}
            </when>
            <when test="title != null and title != ''">
                where title like '%${title}%'
            </when>
            <when test="content != null and content != ''">
                where content like '%${content}%'
            </when>
        </choose>
    </select>

    <select id="selectPostsAndUser" resultMap="post">
        select *
        from blog_list
                 left join user on blog_list.user_id = user.id;
    </select>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into blog_list (user_id, title, cover, publish_time, last_update_time, content, view, description, status)
        values (#{userId}, #{title}, #{cover}, #{publishTime}, #{lastUpdateTime}, #{content}, #{view}, #{description}, #{status})
    </insert>

    <update id="update">
        update blog_list
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="description != null and description != ''">
                description= #{description},
            </if>
            <if test="status != 0">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteById">
        delete from blog_list
        where id = #{id}
    </delete>

    <delete id="deleteByIds">
        delete from blog_list where id in
        <foreach collection="array" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
    </delete>
</mapper>